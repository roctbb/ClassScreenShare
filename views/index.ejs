<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Поделиться экраном</title>
</head>
<body>
<div id="login">
    <h1>Введите фамилию и имя:</h1>
    <input type="text" id="name" placeholder="Ваше имя">
    <button id="startSharing">Делиться экраном</button>
</div>
<p id="status"></p>

<!-- Элемент для отображения обратной связи -->
<script src="/socket.io/socket.io.js"></script>
<script>
    const socket = io({
       reconnection: true,              // Включить автоматические попытки переподключения
       reconnectionAttempts: 5,          // Ограничение на количество попыток (по умолчанию бесконечно)
       reconnectionDelay: 1000,          // Задержка перед первой попыткой (в миллисекундах)
       reconnectionDelayMax: 5000,       // Максимальная задержка между попытками
       timeout: 20000                    // Тайм-аут соединения (в миллисекундах)
   });
    const startSharing = document.getElementById('startSharing');
    const nameInput = document.getElementById('name');
    const status = document.getElementById('status');

    startSharing.addEventListener('click', async () => {
        const name = nameInput.value;
        if (!name) {
            alert('Введите имя!');
            return;
        }

        socket.emit('join', {name: name});

        try {
            // Прячем поле ввода и кнопку после начала трансляции
            document.getElementById('login').style.display = 'none';

            const displayMediaOptions = {
              video: {
                displaySurface: "window",
              },
              audio: false,
            };

            // Запрашиваем доступ к захвату экрана
            const stream = await navigator.mediaDevices.getDisplayMedia(displayMediaOptions);
            const video = document.createElement('video');
            video.srcObject = stream;
            video.play();

            const canvas = document.createElement('canvas');
            const context = canvas.getContext('2d');

            setInterval(() => {
                // Захватываем кадры и уменьшаем их
                if (video.readyState === video.HAVE_ENOUGH_DATA) {
                    const targetWidth = 1080; // Целевое ширина изображений
                    const scaleFactor = targetWidth / video.videoWidth; // Коэффициент уменьшения
                    const targetHeight = video.videoHeight * scaleFactor; // Высота пропорционально уменьшенной ширине

                    canvas.width = targetWidth;
                    canvas.height = targetHeight;

                    context.drawImage(video, 0, 0, canvas.width, canvas.height);

                    // Преобразуем уменьшенное изображение в Data URL
                    const imgData = canvas.toDataURL('image/webp', 0.8); // Уменьшаем также качество до 70%
                    try {
                        socket.emit('share_screen', imgData);
                        status.textContent = 'Передача экрана началась! Не закрывайте вкладку!';
                    }
                    catch(e) {
                        console.log("Ошибка:", e)

                    }

                }
            }, 5000);
        } catch (err) {
            console.error(err);
            alert('Не удалось получить доступ к экрану!');
            status.textContent = 'Ошибка! Вы не дали разрешение.';
            // Возвращаем поле ввода и кнопку, если произошла ошибка
            document.getElementById('login').style.display = '';
        }
    });

    socket.on('disconnect', () => {
       status.textContent = 'Соединение потеряно. Попытка переподключения...';
    });

   socket.on('connect', () => {
       status.textContent = 'Соединение установлено!';

       const name = nameInput.value;
       if (name) {
            socket.emit('join', {name: name});
       }
   })

   socket.on('reconnect_attempt', () => {
       status.textContent = 'Попытка переподключения...';
   });
   socket.on('reconnect', () => {
       status.textContent = 'Соединение восстановлено!';
   });
   socket.on('connect_error', (err) => {
       status.textContent = 'Ошибка подключения: ' + err.message;
   });
</script>
</body>
</html>